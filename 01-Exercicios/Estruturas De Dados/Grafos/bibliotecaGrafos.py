# Importando a biblioteca NetworkX para criar e manipular grafos
import networkx as nx

# Importando a biblioteca Matplotlib para fazer a visualiza√ß√£o do grafo
import matplotlib.pyplot as plt


# Criando um grafo vazio (n√£o direcionado)
grafo = nx.Graph()


# üî∏ Adicionando os v√©rtices (n√≥s) ao grafo
grafo.add_node("a")
grafo.add_node("b")
grafo.add_node("c")  # Adicionando o n√≥ "c"
grafo.add_node("d")


# üî∏ Adicionando as conex√µes (arestas) entre os n√≥s
grafo.add_edge("a", "b")  # Conecta "a" com "b"
grafo.add_edge("a", "c")  # Conecta "a" com "c"
grafo.add_edge("b", "d")  # Conecta "b" com "d"
grafo.add_edge("c", "d")  # Conecta "c" com "d"
grafo.add_edge("c", "b")  # Conecta "c" com "b"


# üîç Obtendo informa√ß√µes sobre o grafo
numeroVertices = grafo.number_of_nodes()  # Conta quantos v√©rtices existem
numeroArestas = grafo.number_of_edges()   # Conta quantas arestas existem


# üñ®Ô∏è Exibindo as informa√ß√µes no console
print("Visualizando as liga√ß√µes de um v√©rtice:", grafo.adj["a"])
# Mostra com quais v√©rtices o v√©rtice "a" est√° conectado

print("Quantidade de arestas por v√©rtice:", grafo.degree())
# Mostra o grau de cada v√©rtice (quantas conex√µes ele tem)

print("Quantidade de v√©rtices:", numeroVertices)
# Mostra o total de v√©rtices no grafo

print("Quantidade de arestas:", numeroArestas)
# Mostra o total de arestas no grafo

print("V√©rtices do grafo:", grafo.nodes())
# Lista todos os v√©rtices do grafo

print("Arestas do grafo:", grafo.edges())
# Lista todas as arestas (as conex√µes) do grafo



# üé® Visualiza√ß√£o gr√°fica do grafo
plt.figure(figsize=(8, 6))  # Define o tamanho da imagem

# Desenha o grafo com v√°rias configura√ß√µes de apar√™ncia
nx.draw(
    grafo,
    with_labels=True,        # Mostra os r√≥tulos (nomes dos n√≥s)
    node_color="skyblue",    # Cor dos n√≥s (c√≠rculos)
    node_size=2000,          # Tamanho dos n√≥s
    font_size=15,            # Tamanho da fonte dos r√≥tulos
    font_color="black",      # Cor da fonte dos r√≥tulos
    font_weight="bold",      # Peso da fonte (negrito)
    edge_color="gray"        # Cor das arestas (linhas)
)

# T√≠tulo da imagem
plt.title("Visualiza√ß√£o do Grafo", fontsize=18)

# Exibe o gr√°fico na tela
plt.show()
